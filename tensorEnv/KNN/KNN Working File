import sklearn
from sklearn.utils import shuffle
from sklearn.neighbors import KNeighborsClassifier
import pandas as pd
import numpy as np
from sklearn import linear_model, preprocessing

# Leemos del fichero con datos
data = pd.read_csv("car.data")

# El algoritmo solo admite valores numericos, por lo que debemos parsear todos los tipos no numericos

# Creamos el objeto que realizara el cambio
le = preprocessing.LabelEncoder()

# Crea un con todos los valores de cada columna en car.data transformados en int
buying = le.fit_transform(list(data["buying"]))
maint = le.fit_transform(list(data["maint"]))
door = le.fit_transform(list(data["door"]))
persons = le.fit_transform(list(data["persons"]))
lug_boot = le.fit_transform(list(data["lug_boot"]))
safety = le.fit_transform(list(data["safety"]))


# No lo nombramos class porque es lo que queremos predecir
cls = le.fit_transform(list(data["class"]))

predict = "class"

# Convierte todos las diferentes listas en una gran lista
X = list(zip(buying, maint, door, persons, lug_boot, safety))
y = list(cls)

# x_train, y_train: Secciones de x e y, respectivamente
# x_test, y_test: Datos para comprobar la precision del modelo creado
# Separamos los datos entre datos de entrenamiento y datos de prueba. Usaremos 90% de nuestros datos como entrenamiento
# y el 10% restante de prueba.
# Hacemos esto para que no probemos el modelo con datos que ya se han visto.
x_train, x_test,y_train, y_test = sklearn.model_selection.train_test_split(X, y, test_size=0.1)
